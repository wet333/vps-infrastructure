---
- name: Setup Docker-Compose Architecture
  hosts: vps
  gather_facts: false
  become: true
  
  tasks:

    # Check if proxy-compose.yml exists, and if it exists stop it
    - name: Check if proxy-compose.yml exists
      stat:
        path: "vps-deployment/proxy-compose.yml"
      register: proxy_compose_file

    - name: Stop proxy-compose.yml if it exists
      command: docker-compose -f "proxy-compose.yml" down
      args:
        chdir: "vps-deployment"
      when: proxy_compose_file.stat.exists == true
      ignore_errors: true

    # Check if apps-compose.yml exists, and if it exists stop it
    - name: Check if apps-compose.yml exists
      stat:
        path: "vps-deployment/apps-compose.yml"
      register: apps_compose_file

    - name: Stop docker-compose for apps
      command: docker-compose -f "apps-compose.yml" --env-file .env down
      args:
        chdir: "vps-deployment"
      when: apps_compose_file.stat.exists == true
      ignore_errors: true

    - name: Clean up docker-compose for apps
      command: docker-compose -f "apps-compose.yml" rm -f
      args:
        chdir: "vps-deployment"
      when: apps_compose_file.stat.exists == true
      ignore_errors: true

    # Create ansible_user/vps-deployment folder
    - name: Create vps-deployment folder
      file:
        path: "vps-deployment"
        state: directory

    # Copy .env file and docker-compose files
    - name: Copy .env file
      copy:
        src: ".env"
        dest: "vps-deployment/.env"

    - name: Copy docker-compose files
      copy:
        src: "{{ item.src }}"
        dest: "vps-deployment/{{ item.name }}"
      with_items:
        - { name: 'proxy-compose.yml', src: './reverse-proxy/docker-compose.yml' }
        - { name: 'apps-compose.yml', src: './apps/docker-compose.yml' }

    # Start proxy and apps
    - name: Run docker-compose for proxy
      command: docker-compose -f "proxy-compose.yml" up -d
      args:
        chdir: "vps-deployment"
      ignore_errors: true

    - name: Update all docker-compose images for apps
      command: docker-compose -f "apps-compose.yml" pull
      args:
        chdir: "vps-deployment"

    - name: Run docker-compose for apps
      command: docker-compose -f "apps-compose.yml" --env-file ".env" up -d
      args:
        chdir: "vps-deployment"
      ignore_errors: true
